<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üéÉ Th√¨ Qu√° Kh·ª© ƒê∆°n - Halloween Spooky Edition üëª</title>
    <style>
        body {
            font-family: "Comic Sans MS", "Arial", sans-serif;
            margin: 20px;
            background: linear-gradient(to bottom, #3a0f72, #f4a261);
            color: #fff;
            line-height: 1.6;
            animation: fadeIn 1s ease-in;
            position: relative;
            overflow-x: hidden;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        /* Hi·ªáu ·ª©ng l√° b√≠ ng√¥ r∆°i */
        .pumpkin-leaf {
            position: fixed;
            width: 30px;
            height: 30px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="%23ff9500" d="M50 15 C65 15 75 25 75 40 C75 55 65 65 50 65 C35 65 25 55 25 40 C25 25 35 15 50 15 Z"/><path fill="%23414141" d="M45 20 L40 5 L60 5 L55 20 Z"/></svg>') no-repeat center;
            background-size: contain;
            z-index: 1000;
            pointer-events: none;
            animation: fall 10s linear infinite;
        }

        @keyframes fall {
            0% {
                transform: translateY(-100vh) rotate(0deg);
                opacity: 0.8;
            }

            100% {
                transform: translateY(100vh) rotate(360deg);
                opacity: 0;
            }
        }

        h1 {
            text-align: center;
            color: #fff;
            background: #ff6f61;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.3);
            font-size: 2.2em;
            position: relative;
        }

            h1::before, h1::after {
                content: "ü¶á";
                position: absolute;
                top: 10px;
            }

            h1::before {
                left: 20px;
            }

            h1::after {
                right: 20px;
            }

        h2 {
            color: #ffca3a;
            margin-top: 25px;
            font-size: 1.8em;
            display: flex;
            align-items: center;
            gap: 10px;
        }

            h2::before {
                content: "üéÉ";
            }

        p {
            margin: 10px 0;
            font-size: 1.1em;
        }

        .box {
            background: #2a1b4e;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            margin-bottom: 25px;
            position: relative;
            overflow: hidden;
        }

            .box::before {
                content: "üëª";
                position: absolute;
                top: 10px;
                right: 10px;
                font-size: 2em;
                opacity: 0.3;
            }

        .highlight {
            background: #fffbea;
            border-left: 6px solid #ff6f61;
            padding: 15px;
            margin: 15px 0;
            border-radius: 10px;
            font-size: 1.1em;
            display: flex;
            align-items: center;
            gap: 10px;
            color: #2a2a72;
        }

            .highlight::before {
                content: "üï∏Ô∏è";
            }

        ul {
            list-style: none;
            margin-left: 20px;
        }

            ul li {
                padding: 8px 0;
                font-size: 1.1em;
                display: flex;
                align-items: center;
                gap: 10px;
            }

                ul li::before {
                    content: "üï∑Ô∏è";
                }

        .verbs {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .verb-card {
            background: #5a189a;
            border: 2px solid #ffca3a;
            padding: 15px;
            text-align: center;
            border-radius: 12px;
            font-weight: bold;
            color: #fff;
            transition: transform 0.3s, box-shadow 0.3s;
            cursor: pointer;
        }

            .verb-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 6px 12px rgba(0,0,0,0.3);
                background: #7b2cbf;
            }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: #fffbea;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.3);
        }

        th {
            background: #ff6f61;
            color: #fff;
            padding: 15px;
            font-size: 1.2em;
        }

        td {
            padding: 12px;
            border-bottom: 1px solid #f0e5d8;
            text-align: center;
            font-size: 1.1em;
            color: #2a2a72;
        }

        tr:nth-child(even) {
            background: #fff5e6;
        }

        tr:hover {
            background: #ffe0b3;
        }

        .example {
            background: #fff3e0;
            border: 2px dashed #ff6f61;
            padding: 20px;
            border-radius: 12px;
            margin: 20px 0;
            font-size: 1.1em;
            display: flex;
            align-items: center;
            gap: 10px;
            color: #2a2a72;
        }

            .example::before {
                content: "üï∏Ô∏è";
            }

        .learn-more, .game-button, .reset-button {
            display: block;
            margin: 20px auto;
            padding: 12px 25px;
            background: #ff6f61;
            color: #fff;
            border: none;
            border-radius: 25px;
            font-size: 1.2em;
            cursor: pointer;
            transition: transform 0.2s, background 0.2s;
        }

            .learn-more:hover, .game-button:hover, .reset-button:hover {
                transform: scale(1.1);
                background: #e63946;
            }

            .learn-more::before, .game-button::before, .reset-button::before {
                content: "üéÉ ";
            }

        .game-section {
            background: #2a1b4e;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            margin-bottom: 25px;
            text-align: center;
        }

            .game-section img {
                max-width: 100px;
                margin: 10px auto;
                display: block;
                border-radius: 10px;
                transition: transform 0.3s;
            }

                .game-section img:hover {
                    transform: scale(1.1);
                }

        .game-input {
            padding: 10px;
            font-size: 1em;
            border: 2px solid #ffca3a;
            border-radius: 8px;
            margin: 10px;
            width: 200px;
        }

        .game-feedback {
            font-size: 1.1em;
            margin-top: 10px;
            color: #ffca3a;
            transition: opacity 0.5s;
            min-height: 24px;
        }

        .game-option {
            display: inline-block;
            margin: 10px;
            padding: 10px 20px;
            background: #5a189a;
            border: 2px solid #ffca3a;
            border-radius: 10px;
            cursor: pointer;
            transition: background 0.2s;
            color: #fff;
        }

            .game-option:hover {
                background: #7b2cbf;
            }

            .game-option.correct {
                background: #d4edda;
                color: #333;
            }

            .game-option.incorrect {
                background: #f8d7da;
                color: #333;
            }

        .gif-container {
            display: inline-block;
            margin: 10px;
            transition: transform 0.3s;
        }

            .gif-container:hover {
                transform: scale(1.1);
            }

        /* Responsive design */
        @media (max-width: 600px) {
            h1 {
                font-size: 1.8em;
                padding: 15px;
            }

                h1::before, h1::after {
                    position: static;
                    display: block;
                    text-align: center;
                    margin: 10px 0;
                }

            h2 {
                font-size: 1.5em;
            }

            .game-input {
                width: 80%;
            }

            .verbs {
                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            }

            .pumpkin-leaf {
                width: 20px;
                height: 20px;
            }

            .example {
                flex-direction: column;
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <!-- Hi·ªáu ·ª©ng l√° b√≠ ng√¥ r∆°i -->
    <div class="pumpkin-leaf" style="left: 10%; animation-delay: 0s;"></div>
    <div class="pumpkin-leaf" style="left: 30%; animation-delay: 2s;"></div>
    <div class="pumpkin-leaf" style="left: 50%; animation-delay: 4s;"></div>
    <div class="pumpkin-leaf" style="left: 70%; animation-delay: 6s;"></div>
    <div class="pumpkin-leaf" style="left: 90%; animation-delay: 8s;"></div>

    <h1>üéÉ Th√¨ Qu√° Kh·ª© ƒê∆°n - Halloween Spooky Edition üëª</h1>

    <div class="box">
        <h2>1. Khi n√†o d√πng th√¨ qu√° kh·ª© ƒë∆°n?</h2>
        <div class="highlight">
            D√πng ƒë·ªÉ k·ªÉ chuy·ªán, n√≥i v·ªÅ vi·ªác ƒë√£ x·∫£y ra trong qu√° kh·ª©.
        </div>
        <p><b>V√≠ d·ª•:</b></p>
        <ul>
            <li>H√¥m qua m√¨nh h√≥a trang th√†nh ph√π th·ªßy.</li>
            <li>Halloween nƒÉm ngo√°i, m√¨nh ƒëi xin k·∫πo.</li>
        </ul>
        <div class="highlight">
            D√πng ƒë·ªÉ n√≥i v·ªÅ th√≥i quen trong qu√° kh·ª© (b√¢y gi·ªù kh√¥ng c√≤n l√†m n·ªØa).
        </div>
        <p><b>V√≠ d·ª•:</b></p>
        <ul>
            <li>Khi c√≤n nh·ªè, m√¨nh th∆∞·ªùng ch∆°i tr√≤ ma qu·ª∑ v√†o Halloween.</li>
        </ul>
        <div class="example">
            Last Halloween, I <b>dressed</b> up as a spooky ghost! üëª
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3NjBlOHpidG03MGU3anlxNnU3bmp4bW5sbHh3ZHVzc2d0eHRodmtzayZlcD12MV9naWZzX3NlYXJjaCZjdD1n/h0wQjzknmeBAWms7P5/giphy.gif" alt="Ghost Halloween" width="80">
            </div>
        </div>
    </div>

    <div class="box">
        <h2>2. C·∫•u tr√∫c ƒë·ªông t·ª´ th∆∞·ªùng</h2>
        <table>
            <tr>
                <th>Lo·∫°i c√¢u</th>
                <th>C·∫•u tr√∫c</th>
                <th>V√≠ d·ª•</th>
            </tr>
            <tr>
                <td>Kh·∫≥ng ƒë·ªãnh</td>
                <td>S + V2/ed + O</td>
                <td>She <b>carved</b> a pumpkin yesterday.</td>
            </tr>
            <tr>
                <td>Ph·ªß ƒë·ªãnh</td>
                <td>S + did not (didn't) + V1</td>
                <td>They <b>didn't eat</b> all the candy.</td>
            </tr>
            <tr>
                <td>Nghi v·∫•n</td>
                <td>Did + S + V1 + O?</td>
                <td><b>Did</b> you <b>visit</b> the haunted house?</td>
            </tr>
            <tr>
                <td>C√¢u h·ªèi v·ªõi t·ª´ ƒë·ªÉ h·ªèi</td>
                <td>Wh + did + S + V nguy√™n m·∫´u + ...?</td>
                <td><b>What did</b> you <b>do</b> at the Halloween party last week?</td>
            </tr>
        </table>
        <div class="example">
            <b>What did</b> you <b>wear</b> to the costume party? üé≠
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3NjBlOHpidG03MGU3anlxNnU3bmp4bW5sbHh3ZHVzc2d0eHRodmtzayZlcD12MV9naWZzX3NlYXJjaCZjdD1n/h0wQjzknmeBAWms7P5/giphy.gif" alt="Pumpkin Dog" width="80">
            </div>
        </div>
    </div>

    <div class="box">
        <h2>3. C·∫•u tr√∫c ƒë·ªông t·ª´ "To be"</h2>
        <table>
            <tr>
                <th>Lo·∫°i c√¢u</th>
                <th>C·∫•u tr√∫c</th>
                <th>V√≠ d·ª•</th>
            </tr>
            <tr>
                <td>Kh·∫≥ng ƒë·ªãnh</td>
                <td>S + was/were + N/Adj</td>
                <td>She <b>was</b> a witch last Halloween.</td>
            </tr>
            <tr>
                <td>Ph·ªß ƒë·ªãnh</td>
                <td>S + was not/were not + N/Adj</td>
                <td>They <b>weren't</b> scared of the ghost.</td>
            </tr>
            <tr>
                <td>Nghi v·∫•n</td>
                <td>Was/Were + S + N/Adj?</td>
                <td><b>Was</b> the party spooky?</td>
            </tr>
            <tr>
                <td>Nghi v·∫•n ph·ªß ƒë·ªãnh</td>
                <td>Wasn't/Weren't + S + N/Adj?</td>
                <td><b>Wasn't</b> the haunted house fun?</td>
            </tr>
            <tr>
                <td>C√¢u h·ªèi v·ªõi t·ª´ ƒë·ªÉ h·ªèi</td>
                <td>Wh + was/were + S + N/Adj/Prep + ...?</td>
                <td><b>What was</b> your favorite costume as a child?</td>
            </tr>
        </table>
        <div class="example">
            <b>Where were</b> you during the Halloween festival? ü¶á
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3bGEwN3F6N3RsNzJ0ajMybmtjZ3h4cjNsczcyemx1ZHJqd2d6N3NtNiZlcD12MV9naWZzX3NlYXJjaCZjdD1n/yIMqpdjSN4ESnPwD9Z/giphy.gif" alt="Owl Halloween" width="80">
            </div>
        </div>
    </div>

    <div class="box">
        <h2>4. D·∫•u hi·ªáu nh·∫≠n bi·∫øt</h2>
        <ul>
            <li>yesterday (h√¥m qua)</li>
            <li>last week/last month/last year</li>
            <li>in the past (trong qu√° kh·ª©)</li>
            <li>this morning/this afternoon (khi ƒë√£ qua r·ªìi)</li>
        </ul>
        <div class="example">
            Last Halloween, we <b>decorated</b> the house with spooky lights! üí°
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3OGk5M29hajBpeHNycWE0bDgzOW5jcGw0bndyYnBha2c4Z2s5ejJ5biZlcD12MV9naWZzX3NlYXJjaCZjdD1n/YtyM339Y3mLiPlUntX/giphy.gif" alt="Spooky Cat" width="80">
            </div>
        </div>
    </div>

    <div class="box">
        <h2>5. M·ªôt s·ªë ƒë·ªông t·ª´ b·∫•t quy t·∫Øc th∆∞·ªùng g·∫∑p</h2>
        <div class="verbs">
            <div class="verb-card">go ‚Üí went</div>
            <div class="verb-card">see ‚Üí saw</div>
            <div class="verb-card">eat ‚Üí ate</div>
            <div class="verb-card">have ‚Üí had</div>
            <div class="verb-card">do ‚Üí did</div>
            <div class="verb-card">make ‚Üí made</div>
            <div class="verb-card">say ‚Üí said</div>
            <div class="verb-card">get ‚Üí got</div>
            <div class="verb-card">find ‚Üí found</div>
            <div class="verb-card">run ‚Üí ran</div>
        </div>
    </div>

    <div class="box game-section">
        <h2>üéÆ Tr√≤ Ch∆°i Halloween Luy·ªán T·∫≠p Th√¨ Qu√° Kh·ª© ƒê∆°n</h2>
        <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3bHM3bGFuZzBhcDN2MzlweWFkdm5yNnlvemJib3l1M2VtN2hocjlwOSZlcD12MV9naWZzX3NlYXJjaCZjdD1n/OW7jUTtOeQY0g8YBJF/giphy.gif" alt="Black Cat Halloween" width="100">

        <div class="game">
            <h3>1. ƒêi·ªÅn d·∫°ng qu√° kh·ª© c·ªßa ƒë·ªông t·ª´</h3>
            <p>Nh·∫≠p d·∫°ng qu√° kh·ª© c·ªßa ƒë·ªông t·ª´ <b>"make"</b> (t·∫°i b·ªØa ti·ªác Halloween):</p>
            <input type="text" id="verbInput" class="game-input" placeholder="Nh·∫≠p ƒë√°p √°n...">
            <button class="game-button" onclick="checkVerb()">Ki·ªÉm tra</button>
            <p id="verbFeedback" class="game-feedback"></p>
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3eXFweHZyaHI2cXYzMHdkaTJtNGd6OWtzNGk0anVvOGpya2l2ZDMzbCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/FpQkv650gizUWbl3sC/giphy.gif" alt="Pumpkin Dog" width="80">
            </div>
        </div>

        <div class="game">
            <h3>2. S·∫Øp x·∫øp c√¢u ƒë√∫ng</h3>
            <p>S·∫Øp x·∫øp: <b>last / Halloween / we / carved / pumpkins</b></p>
            <input type="text" id="sentenceInput" class="game-input" placeholder="Nh·∫≠p c√¢u ho√†n ch·ªânh...">
            <button class="game-button" onclick="checkSentence()">Ki·ªÉm tra</button>
            <p id="sentenceFeedback" class="game-feedback"></p>
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3eXFweHZyaHI2cXYzMHdkaTJtNGd6OWtzNGk0anVvOGpya2l2ZDMzbCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/bhP0jGDYXwaO2hFRcI/giphy.gif" alt="Owl Halloween" width="80">
            </div>
        </div>

        <div class="game">
            <h3>3. Ch·ªçn ƒë√°p √°n ƒë√∫ng</h3>
            <p>Last Halloween, she ___ a spooky costume.</p>
            <div class="game-option" onclick="checkOption('wore', this, true)">wore</div>
            <div class="game-option" onclick="checkOption('wear', this, false)">wear</div>
            <div class="game-option" onclick="checkOption('wearing', this, false)">wearing</div>
            <p id="optionFeedback" class="game-feedback"></p>
            <div class="gif-container">
                <img src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3bzUza2kwemFxMDVzemE0aTYwN2t6Zm5jZ2NneXYxazZsMzh2anQ4OCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/3o7TKUAOqDm3SQle92/giphy.gif" alt="Spooky Cat" width="80">
            </div>
        </div>
        <button class="reset-button" onclick="resetGames()">Ch∆°i l·∫°i</button>
    </div>

    <button class="learn-more" onclick="alert('H·ªçc th√™m n√†o! üéÉ')">H·ªçc th√™m nh√©!</button>

    <script>
        // T·∫°o √¢m thanh ƒë∆°n gi·∫£n khi tr·∫£ l·ªùi ƒë√∫ng
        function playCorrectSound() {
            try {
                const context = new (window.AudioContext || window.webkitAudioContext)();
                const oscillator = context.createOscillator();
                const gainNode = context.createGain();

                oscillator.connect(gainNode);
                gainNode.connect(context.destination);

                oscillator.type = 'sine';
                oscillator.frequency.value = 523.25; // C5
                gainNode.gain.value = 0.3;

                oscillator.start();
                gainNode.gain.exponentialRampToValueAtTime(0.00001, context.currentTime + 0.5);

                setTimeout(() => {
                    oscillator.stop();
                }, 500);
            } catch (e) {
                console.log("Audio context not supported");
            }
        }

        function checkVerb() {
            const input = document.getElementById('verbInput').value.trim().toLowerCase();
            const feedback = document.getElementById('verbFeedback');

            if (input === 'made') {
                feedback.textContent = 'üéÉ Ch√≠nh x√°c! "Make" trong qu√° kh·ª© l√† "made".';
                feedback.style.color = '#28a745';
                playCorrectSound();
            } else {
                feedback.textContent = 'üï∏Ô∏è Sai r·ªìi! Th·ª≠ l·∫°i nh√©, ƒë√°p √°n ƒë√∫ng l√† "made".';
                feedback.style.color = '#dc3545';
            }

            feedback.style.opacity = '0';
            setTimeout(() => { feedback.style.opacity = '1'; }, 100);
        }

        function checkSentence() {
            const input = document.getElementById('sentenceInput').value.trim().toLowerCase().replace(/\s+/g, ' ');
            const feedback = document.getElementById('sentenceFeedback');
            const correctAnswer = 'we carved pumpkins last halloween';

            if (input === correctAnswer) {
                feedback.textContent = 'üéÉ Tuy·ªát v·ªùi! C√¢u ƒë√∫ng l√†: We carved pumpkins last Halloween.';
                feedback.style.color = '#28a745';
                playCorrectSound();
            } else {
                feedback.textContent = 'üï∏Ô∏è Ch∆∞a ƒë√∫ng ƒë√¢u! C√¢u ƒë√∫ng l√†: We carved pumpkins last Halloween.';
                feedback.style.color = '#dc3545';
            }

            feedback.style.opacity = '0';
            setTimeout(() => { feedback.style.opacity = '1'; }, 100);
        }

        function checkOption(answer, element, isCorrect) {
            const feedback = document.getElementById('optionFeedback');
            const options = document.querySelectorAll('.game-option');

            options.forEach(opt => {
                opt.classList.remove('correct', 'incorrect');
                opt.onclick = null; // Disable further clicks
            });

            if (isCorrect) {
                element.classList.add('correct');
                feedback.textContent = 'üéÉ ƒê√∫ng r·ªìi! "Wore" l√† ƒë√°p √°n ƒë√∫ng.';
                feedback.style.color = '#28a745';
                playCorrectSound();
            } else {
                element.classList.add('incorrect');
                feedback.textContent = 'üï∏Ô∏è Sai r·ªìi! ƒê√°p √°n ƒë√∫ng l√† "wore".';
                feedback.style.color = '#dc3545';

                // Highlight the correct answer
                options.forEach(opt => {
                    if (opt.textContent === 'wore') {
                        opt.classList.add('correct');
                    }
                });
            }

            feedback.style.opacity = '0';
            setTimeout(() => { feedback.style.opacity = '1'; }, 100);
        }

        function resetGames() {
            document.getElementById('verbInput').value = '';
            document.getElementById('sentenceInput').value = '';
            document.getElementById('verbFeedback').textContent = '';
            document.getElementById('sentenceFeedback').textContent = '';
            document.getElementById('optionFeedback').textContent = '';

            const options = document.querySelectorAll('.game-option');
            options.forEach(option => {
                option.classList.remove('correct', 'incorrect');
                option.onclick = function () {
                    checkOption(this.textContent, this, this.textContent === 'wore');
                };
            });
        }
    </script>
</body>
</html>
